<<강의실 구현해서 언리얼에 넣어보기>>

(ThirdPerson의 경우, 붐마이크의 타겟 arm reach의 길이 때문에, 실제 건물 사이즈를 구현 하면, 시야에 오류가 있을 수 있음.)

<블렌더 내 오브젝트 등비 복사/바닥 만들기>
modifier - array (x,y축 따로 따로 초 2개 적용)
다 적용하고 - conver to mesh

<기둥 및 벽 seperate 하기>

(비교체가 없으면, 뇌는 물체를 작게 인식하는 경향이 있음, 비교체를 두면, 인식이 편함)


<천장 만들기>
바닥 복제 후 스냅 혹은 z 250

solidify 적용해서 두께 주기
(face orientation 키면 천장이 바깥을 봄으로, 이대로 가져가면 plane 특성 상 언리엘에서 투명하게 나옴)

(강사가 하는 방식이 늘 옳은 것은 아니므로, 주체적으로 이해하고 수정할 수 있길 바람)
(작업 방향은 양면성이 있을 수 있으므로, 무조건 틀린 work flow는 아닐지도 모름)

<창문 만들기>

창문 바닥 부분 선택후 p = seperate 후, solidify 높이 변경

(면이 겹쳐지면 언리얼에서 면이 특이하게 그림자 져서 나옴)

---

<언리얼에 임포트 하기>

go to empty level, then import
(그리고 recompute Nomals 과 recompute tagents를 꺼주어야 함!)
combine static mesh를 체크해야 오브젝트들이 연결되어서 들어옴.(설정은 저장됨으로 임포트마다 확인해주삼)

---

 <빛 부여하기>
add to project - lights - directional light
<빛 개선>
Lit - game settings - EV를 0으로 설정하면, 눈뽕 효과가 사라짐.
light의 디테일 - intensity = 빛강도
light의 디테일 - indirect lighting intensity = 반사광/간접광 강도

----

<임포트된 메쉬의 그림자 오류 블렌더에서 수정하기>

(울퉁불퉁 언리얼에서 메쉬가 그림자 지는 이유는, 각이 져서 그럼, 블렌더에서, 해당 오브젝트들 모두 선택 후, 우클릭 - shade flat 후 재 export&import to UE)

(언리얼에서 인스턴스 잡고 ctrl + b 하면 레퍼런스 자동으로 잡아줌)

(그리고 recompute Nomals 과 recompute tagents를 꺼주어야 함!)

----

<빛 개선>
라이트는 실내 조명과 야외 광이 있음
반사광이 검정이면, 언리얼에서는 검정으로 반사되면서, 실상 안 밝아 보이기도 함.
(directional light는 위치랑 상관 없고 각도만 영향을 줌)

<파란 배경 빛 추가하기>
Window - Env.LightMixer - Add sky light (노란 빛) & Add sky atmosphere (파란 빛)

(간접광을 잘 안주면, 짙게 되면서 어두워짐. 간접광을 잘 주면, 전체적으로 밝아짐 = 현실보다 강하면 밝은 이미지/분위기 and vice versa)

<블레더 오브젝트 포장하기>

전체선택 후 m - new collection then, 아웃라이너에서 체크 끄면 숨겨짐

----
----

<<Sci-fi Room 만들기>>

이번엔 plane 한방에 바닥 만들기
(scale은 변경될 때마다 apply 단위 오류 회피)

모양 잡은 바닥과 기둥을 convert to curve하면 면이 커브로 바뀜, 디테일 창에 data의 모양에서 확인

<기둥의 커브를 바닥에 끌어오기>

디테일 창에 data - geometry - bevel - object - 스포이드를 기둥 curve에 클릭

<기둥의 커브를 바닥에 끌어오기 개선>

디테일 창에 data - geometry - bevel - object - 스포이드를 기둥 curve에 클릭 (그러나 해당 오브젝트의 피봇위치가 bevel에 기준점이 됨으로 피봇을 수정해야 함 = cursor 이동 후 우클릭 set origin to cursor)

<기둥 디테일 만들기>

(만들어낸 틀 복제 후, m - creat new collection - name: back up)
(properties 디테일창 추가 분할하기 + 아웃라이너 추가)
(남은 것은 convert to mesh)

ctrl + R 기둥 가르기
(선은 스케일로 짜부하면 평평해짐)
(bevel은 양쪽으로 먹으니 25만 넣으면 50됨)
p - selection = 기둥 분리

<창문 만들기>
ctrl + alt 클릭 = 가로로 둘러 싼 거 모두 선택 (alt + 클릭 = 세로로 둘러 싼 거 모두 선택)

<창문 만들기 개선>
면 추가
individual origins - i +3 (inset 3cm로 디테일 추가)
individual origins - e + 5 + '-' (extrude -5 디테일 추가)

<마무리>
convert to mesh & join 'em

---
---
---

<<문 만들기>>

origin을 cursor를 이용해, 큐브 끝에 옮기기

(carver는 오브젝트 선택한 상태에서 꺼내야 함)
(면을 bevel로 둥글게 할 수 있지만, i + g 로 비스듬이 늘릴 수도 있음)

<<문 구멍 뚫기/carver 원리 이용>>

xyz, 200/300/250 큐브 를 꺼내서 문과 같은 크기

modifier - boolen - object 스포이드 선택(짝궁 지정)
(intersect = 공집합, uninon 합집합,)
(짝꿍 object - 디테일 - viewport display - display as- wire = carver 처럼 보기)

(자른 후 잘린 걸, convert to mesh 해야 잘린 게 적용 됨)

<문 위치 시키기>
g + z + 125 then y at the appropriate point


---------
---------

<<탕탕 특공이 만들기>>

(졸업 후 집중해서 작업할 곳이 없을 수 있으니, 있는 동안 수익 내는 걸 만들어 봤으면)

<캐릭터 임포트>
(root 본이랑 아마추어에 연결이 안 되면 언리얼이 임포트시 스켈레톤 생성을 안 해줘 보리 보리 보리 감자 보리/connected 나 keep offset은 큰 상관 없는 듯)

<third person anim retarget>
ABP manny - creat retarget - ABP manny를 선택하고 exprt animations를 하려지만 rigs들이 다르므로 auto retargeter는 못하고 아무거나 일단 선택
BS 애니메이션 변경

ABP - anim graph 변경 (idle은 디테일에서 loop animation을 체크하여 주어야함 그래야 like 숨쉬듯)
ABP의 control rig 오류는 그냥 점프 무시하고 임시호 연결 끊어삐요야요

--------

<따라오는 AI 코드>
Ai move to node를 원하는 character 블루프린트에 begin play로 연결
self will follow the target, if the target is in the acceptance Radius results success
(AI 캐릭터는 카메라가 필요 없으니 삭제)

<AI 네비게이팅 적용하기>
quickly add to the project - nav mesh mesh bound 추가(RecastNavMesh-Default자동 생성됨), p = 해당 바운더리 에서만 ai가 네비게이팅을 할 수 있음

<BP_enemy의 가속화 적용하기>
해당 블루프린트에 loop 키고 auto play 키고, float 3초 추가
(auto play on = no need for event)

set max walk speed 노드 

lerp (A,B ; 0~1) 노드로 트랙의 흐름과 최대 속도를 연결
(lerp의 평균 값이 target의 속도와 근접해야 긴장감이 있음)

<enemy 10개 소환술>
(디자인 기반 강사라 아직, 멀티 플레이 구현은 몰라유. 건의해서 배워도 좋아유)
(건당 500원만 받는 게임 만들어도 재밋)
x와 y 값에 각각 sine을 넣으면 원이 됨
원 그리기
sine의 첫 = 0, cos의 첫 = 1
degree's 최댓값 = 360 period -1 ~ 1
cos과 sine의 순서는 상관없음
원 그리기 0 ~ 360

(AI Enemy의 디테일에서 possess 설정을 바꾸어 주어야 함)
tick으로 연결하면, 블루프린트의 self의 디테일에서 tick 간격 설정 가능

------------
-----------
1 target animation > abp_manny
2 BS_Bear > Idle, Run, Jump, Land
3 ABP_Bear > Idle(Loop), Jump(you may delete or modify), Land(you may delete or modify)
4 control rig problem - just unlink it
5 BP_Bear > skeletal mesh, ABP
6 BP_Enemy > AI move to(sef towards get player pawn)
7 nav mesh bound > P(Path, RecastNavMesh-Default- draw filled with polys, Enable Drawing), then scale up
8 BP_MainSystemEnemySpawner > spawn actor form class
	Xpos: sine (-1 ~ 1) cm * 500 / 파동 모양 0 1 0 -1
	Ypos: cos (-1 ~ 1) cm * 500 / 역 이차함수 모양 -1 0 1 -1


-------

과제: carver 와 나이프, boolean 조각



